# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Darass Push Builder [BE]

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code 
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.MY_REPO_PAT }}
        submodules: recursive

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Setup timezone
      uses: zcong1993/setup-timezone@master
      with:
        timezone: Asia/Seoul

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      working-directory: ./backend

    - name: Build with Gradle
      run: ./gradlew clean build
      working-directory: ./backend
      
    - name: Print pwd
      run: echo $PWD
      
    - name: Copy built project
      if: success()
      uses: appleboy/scp-action@master
      env:
        GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
        GIT_PASSWORD: ${{ secrets.GIT_PASSWORD }}
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        envs: GIT_USERNAME, GIT_PASSWORD
        source: '.'
        target: '/home/ubuntu'
        strip_components: 1

    - name: AWS EC2에 ssh로 접속해서 scripts 실행시키기
      if: success()
      uses: appleboy/ssh-action@master
      env:
        GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
        GIT_PASSWORD: ${{ secrets.GIT_PASSWORD }}
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        envs: GIT_USERNAME, GIT_PASSWORD
        script: |
          cd /home/ubuntu
          sudo rm -rf 2021-darass
          mv workspace 2021-darass
          cd 2021-darass/backend
          docker-compose up --build -d
          
    - name: build result to slack
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo, message, commit, author, action, eventName, ref, workflow, job, took
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: always()
